{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"siteName": {
			"type": "string",	
			"defaultValue": "cf-cmp-function",
			"metadata": {
				"description": "The name of the function app that you wish to create."
			}
		},
		"runtime": {
			"type": "string",
			"defaultValue": "dotnet",
			"allowedValues": [
				"node",
				"dotnet",
				"java"
			],
			"metadata": {
				"description": "The language worker runtime to load in the function app."
			}
		},
		"serverfarms_name": {
			"defaultValue": "cmp-serverfarm",
			"type": "String"
		},
		"cosmosdb-accountName": {
			"type": "string",
			"defaultValue": "cf-cmp-cosmosdb",
			"metadata": {
				"description": "Cosmos DB account name, max length 44 characters, lowercase"
			}
		},
		"cosmosdb-location": {
			"type": "string",
			"defaultValue": "East US",
			"metadata": {
				"description": "Location for the Cosmos DB account."
			}
		},
		"cosmosdb-primaryRegion": {
			"type": "string",
			"defaultValue": "East US",
			"metadata": {
				"description": "The primary replica region for the Cosmos DB account."
			}
		},
		"cosmosdb-secondaryRegion": {
			"type": "string",
			"defaultValue": "West US",
			"metadata": {
				"description": "The secondary replica region for the Cosmos DB account."
			}
		},
		"defaultConsistencyLevel": {
			"type": "string",
			"defaultValue": "Session",
			"allowedValues": [
				"Eventual",
				"ConsistentPrefix",
				"Session",
				"BoundedStaleness",
				"Strong"
			],
			"metadata": {
				"description": "The default consistency level of the Cosmos DB account."
			}
		},
		"maxStalenessPrefix": {
			"type": "int",
			"minValue": 10,
			"defaultValue": 100000,
			"maxValue": 2147483647,
			"metadata": {
				"description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
			}
		},
		"maxIntervalInSeconds": {
			"type": "int",
			"minValue": 5,
			"defaultValue": 300,
			"maxValue": 86400,
			"metadata": {
				"description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
			}
		},
		"automaticFailover": {
			"type": "bool",
			"defaultValue": true,
			"allowedValues": [
				true,
				false
			],
			"metadata": {
				"description": "Enable automatic failover for regions"
			}
		},
		"cosmosdb-databaseName": {
			"type": "string",
			"defaultValue": "recorddb",
			"metadata": {
				"description": "The name for the database"
			}
		},
		"cosmosdb-containerName": {
			"type": "string",
			"defaultValue": "records",
			"metadata": {
				"description": "The name for the container"
			}
		},
		"autoscaleMaxThroughput": {
			"type": "int",
			"defaultValue": 4000,
			"minValue": 4000,
			"maxValue": 1000000,
			"metadata": {
				"description": "Maximum throughput for the container"
			}
		}
	},
	"variables": {
		"storageName": "[concat('function', uniqueString(parameters('siteName')))]",
		"contentShareName": "[toLower(parameters('siteName'))]",
		"repoUrl": "https://github.com/mygithub334272/getcusmosdbdata",
		"branch": "master",
		"cosmosdb-accountName": "[toLower(parameters('cosmosdb-accountName'))]",
		"functionWorkerRuntime": "[parameters('runtime')]",
		"consistencyPolicy": {
			"Eventual": {
				"defaultConsistencyLevel": "Eventual"
			},
			"ConsistentPrefix": {
				"defaultConsistencyLevel": "ConsistentPrefix"
			},
			"Session": {
				"defaultConsistencyLevel": "Session"
			},
			"BoundedStaleness": {
				"defaultConsistencyLevel": "BoundedStaleness",
				"maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
				"maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
			},
			"Strong": {
				"defaultConsistencyLevel": "Strong"
			}
		},
		"locations": [{
				"locationName": "[parameters('cosmosdb-primaryRegion')]",
				"failoverPriority": 0,
				"isZoneRedundant": false
			},
			{
				"locationName": "[parameters('cosmosdb-secondaryRegion')]",
				"failoverPriority": 1,
				"isZoneRedundant": false
			}
		]
	},
	"resources": [{
			"apiVersion": "2016-03-01",
			"name": "[parameters('siteName')]",
			"type": "Microsoft.Web/sites",
			"properties": {
				"name": "[parameters('siteName')]",
				"siteConfig": {
					"appSettings": [{
							"name": "AzureWebJobsDashboard",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
						},
						{
							"name": "AzureWebJobsStorage",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
						},
						{
							"name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
						},
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "ROUTING_EXTENSION_VERSION",
							"value": "~0.1"
						},
						{
							"name": "WEBSITE_CONTENTSHARE",
							"value": "[variables('contentShareName')]"
						},
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "[variables('functionWorkerRuntime')]"
						},
							 {
							   "name": "[concat(parameters('cosmosdb-accountName'), '_DOCUMENTDB')]",
							   "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdb-accountName')), '2019-12-12').connectionStrings[1].connectionString]"
							 }	
					]
				},
				"clientAffinityEnabled": false,
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_name'))]"
			},
			"resources": [{
				"apiVersion": "2015-08-01",
				"name": "web",
				"type": "sourcecontrols",
				"dependsOn": [
					"[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
				],
				"properties": {
					"RepoUrl": "[variables('repoURL')]",
					"branch": "[variables('branch')]",
					"IsManualIntegration": true
				}
			}],
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
				"[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_name'))]",
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdb-accountName'))]"
			],
			"location": "[resourceGroup().location]",
			"kind": "functionapp"
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('storageName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "Standard_LRS"
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2018-02-01",
			"name": "[parameters('serverfarms_name')]",
			"location": "East US",
			"sku": {
				"name": "Y1",
				"tier": "Dynamic",
				"size": "Y1",
				"family": "Y",
				"capacity": 0
			},
			"kind": "functionapp",
			"properties": {
				"perSiteScaling": false,
				"maximumElasticWorkerCount": 1,
				"isSpot": false,
				"reserved": false,
				"isXenon": false,
				"hyperV": false,
				"targetWorkerCount": 0,
				"targetWorkerSizeId": 0
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"name": "[variables('cosmosdb-accountName')]",
			"apiVersion": "2020-04-01",
			"kind": "GlobalDocumentDB",
			"location": "[parameters('cosmosdb-location')]",
			"properties": {
				"consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
				"locations": "[variables('locations')]",
				"databaseAccountOfferType": "Standard",
				"enableAutomaticFailover": "[parameters('automaticFailover')]"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
			"name": "[concat(variables('cosmosdb-accountName'), '/', parameters('cosmosdb-databaseName'))]",
			"apiVersion": "2020-04-01",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb-accountName'))]"
			],
			"properties": {
				"resource": {
					"id": "[parameters('cosmosdb-databaseName')]"
				}
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('cosmosdb-accountName'), '/', parameters('cosmosdb-databaseName'), '/', parameters('cosmosdb-containerName'))]",
			"apiVersion": "2020-04-01",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb-accountName'), parameters('cosmosdb-databaseName'))]"
			],
			"properties": {
				"resource": {
					"id": "[parameters('cosmosdb-containerName')]",
					"partitionKey": {
						"paths": [
							"/employeeId"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
							"path": "/*"
						}],
						"excludedPaths": [{
							"path": "/myPathToNotIndex/*"
						}],
						"compositeIndexes": [
							[{
									"path": "/name",
									"order": "ascending"
								},
								{
									"path": "/age",
									"order": "descending"
								}
							]
						],
						"spatialIndexes": [{
							"path": "/path/to/geojson/property/?",
							"types": [
								"Point",
								"Polygon",
								"MultiPolygon",
								"LineString"
							]
						}]
					},
					"defaultTtl": 86400,
					"uniqueKeyPolicy": {
						"uniqueKeys": [{
							"paths": [
								"/phoneNumber"
							]
						}]
					}
				},
				"options": {
					"autoscaleSettings": {
						"maxThroughput": "[parameters('autoscaleMaxThroughput')]"
					}
				}
			}
		}
	],
	"outputs": {
		"uriFor-POST": {
			"type": "string",
			"value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0],'/api/',parameters('cosmosdb-containerName'))]"
		},
		"uriFor-GET": {
			"type": "string",
			"value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0],'/api/',parameters('cosmosdb-containerName'),'/{id}')]"
		},
		"uriFor-UPDATE": {
			"type": "string",
			"value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0],'/api/',parameters('cosmosdb-containerName'),'/{id}')]"
		},
		"uriFor-DELETE": {
			"type": "string",
			"value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0],'/api/',parameters('cosmosdb-containerName'),'/{id}/{employeeId}')]"
		}
	}
}